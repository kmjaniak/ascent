source('~/ascent/R/hello.R', echo=TRUE)
source('~/ascent/R/hello.R', echo=TRUE)
library(ascent)
?read_ascent_csv
?ascent
??ascent
install.packages("Rtools")
library(ascent)
?read_ascent_csv
document()
install.packages("devtools")
library(devtools)
install_githum("klutometis/roxygen")
install_github("klutometis/roxygen")
library(dplyr)
library(roxygen2)
document()
?read_ascent_csv
source('~/ascent/R/ascent.R', echo=TRUE)
document()
library(ascent)
?clean_ascent_cols
library(ascent)
?add_stream_col
document()
library(ascent)
?add_stream_col
?clean_ascent_cols
document()
library(ascent)
?strsplit
document()
library(ascent)
library(ascent)
library(ascent)
library(ascent)
library(ascent)
library(ascent)
library(ascent)
library(ascent)
library(ascent)
library(ascent)
library(ascent)
library(ascent)
document()
library(ascent)
library(ascent)
library(ascent)
document()
library(ascent)
library(ascent)
install.packages("plotly")
source('~/ascent/R/ascent.R', echo=TRUE)
library(ascent)
document()
library(ascent)
library(ascent)
source('~/ascent/R/ascent.R', echo=TRUE)
source('~/ascent/R/ascent.R', echo=TRUE)
source('~/ascent/R/ascent.R', echo=TRUE)
summarize_QC < - function(data, exclude_outliers = TRUE) {
if(exclude_outliers) {
use_data <- data %>%
filter(!Outlier)
} else
use_data <- data
summaryTable <- use_data %>%
group_by(Analyte, Sample, Target) %>%
summarize("Mean" = mean_round(Conc),
"SD" = sd_round(Conc),
"%CV" = cv_round(Conc),
"%Dev" = acc(Conc, Target),
"n" = n()) %>%
ungroup()
return(summaryTable)
}
source('~/ascent/R/ascent.R', echo=TRUE)
library(ascent)
source('~/ascent/R/ascent.R', echo=TRUE)
library(ascent)
source('~/ascent/R/ascent.R', echo=TRUE)
library(ascent)
