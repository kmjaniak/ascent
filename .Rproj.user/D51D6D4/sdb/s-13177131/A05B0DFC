{
    "collab_server" : "",
    "contents" : "library(dplyr)\n\n\n#Define functions\n\nmean_round <- function(x) {\n  round(mean(x), 1)\n}\n\nsd_round <- function(x) {\n  round(sd(x), 1)\n}\n\ncv_round <- function(x) {\n  round(sd(x)/mean(x)*100,1)\n}\n\nacc <- function(conc, target) {\n  round(100*(mean(conc) - mean(target))/mean(target), 1)\n}\n# \n# read_ascent_csv <- function(batch_names)  {\n#   #create a list of file paths from the batch names(csvs are stored in \"data\" folder)\n#   \n#   batch_paths <- lapply(batch_names, \n#                         function(x) paste(\"data/\", x, \"_alere_results.csv\", sep = \"\"))\n#   \n#   \n#   #Read in all the .csv files to \"data\" (creates a list of data frames for each stream)\n#   \n#   data <- lapply(batch_paths, read.csv, stringsAsFactors = FALSE)\n#   \n#   #Combine the individual data frames into one data frame \n#   \n#   do.call(\"rbind\", data)\n#   \n# }\n# \n# clean_ascent_cols <- function(data, posix = FALSE) {\n#   data <- data %>%\n#     select(Batch,\n#            Index,\n#            Sample = Sample.Name,\n#            Type,\n#            Nominal = Nominal.Conc.,\n#            Analyte = Compound,\n#            Response,\n#            Conc = Calc..Conc.,\n#            ISQuant = Chrom.1.Name,\n#            Area = Chrom.1.Area,\n#            AcqTime = Acquisition.Time)\n#   \n#   data$Type <- factor(data$Type, levels = c(\"Standard\", \"Blank\", \"QC\", \"Unknown\"))\n#   data$Batch <- as.factor(data$Batch)\n#   data$Analyte <- as.factor(data$Analyte)\n#   data$ISQuant <- as.factor(data$ISQuant)\n#   \n#   data$AcqTime <- gsub(\"T\", \" \", data$AcqTime)\n#   data$AcqTime <- trimws(gsub(\"\\\\.000Z\", \"\", data$AcqTime))\n#   if(posix) {data$AcqTime <- as.POSIXct(data$AcqTime)}\n#   \n#   data\n# }\n# \n# remove_standards <- function(data) {\n#   data %>%\n#     filter(!Type == \"Standard\")\n# }\n# \n# add_stream_col <- function(data) {\n#   \n#   data <- data %>%\n#     mutate(Stream = ifelse(grepl(\"_A_\", Batch), \"Stream 1\", \n#                            ifelse(grepl(\"_B_\", Batch), \"Stream 2\", \"Stream Unknown\")))\n#   \n#   data$Stream <- as.factor(data$Stream)\n#   \n#   data\n# }\n# \n",
    "created" : 1502837332082.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3860277236",
    "id" : "A05B0DFC",
    "lastKnownWriteTime" : 1502894561,
    "last_content_update" : 1502894561,
    "path" : "~/EtG/functions.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}